[{"title":"Editor de Informações Unificadas","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-BR\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Gerenciamento de Prontuários Unificado&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: 'Arial', sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f4f4f4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: #333;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #tabs {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: flex;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flex-wrap: wrap;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #fff;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transition: background-color 0.3s;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab-active {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #007BFF;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f0f0f0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #editor-container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #tab-info, #new-item-container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #tab-info input, #tab-info textarea, #new-item-container input {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: calc(100% - 20px);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 14px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #buttons {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #buttons button {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #007BFF;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transition: background-color 0.3s;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #buttons button:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #0056b3;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .item {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f9f9f9;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .item h3 {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0 0 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .item-content {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @media print {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: black;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .page-break {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; page-break-before: always;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .tab, #buttons {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body oncontextmenu=\"return false;\"&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"tabs\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"addTab()\"&gt;Adicionar Aba&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"editor-container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"tab-info\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"tab-title\" placeholder=\"Título da aba\" oninput=\"updateTabTitle()\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;textarea id=\"tab-description\" placeholder=\"Descrição da aba\" oninput=\"updateTabDescription()\"&gt;&lt;/textarea&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"new-item-container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"new-item-title\" placeholder=\"Título do item\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;select id=\"item-title-format\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=\"h1\"&gt;Título 1&lt;/option&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=\"h2\"&gt;Título 2&lt;/option&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=\"p\"&gt;Parágrafo&lt;/option&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/select&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"new-item-content\" style=\"height: 200px;\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"addNewItem()\"&gt;Adicionar Item&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"list\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"buttons\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"save()\"&gt;Salvar&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"saveEncrypted()\"&gt;Salvar com Criptografia&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"load()\"&gt;Carregar&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"loadEncrypted()\"&gt;Carregar com Criptografia&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"printTabs()\"&gt;Imprimir Todas as Abas&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"printActiveTab()\"&gt;Imprimir Aba Ativa&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;input type=\"password\" id=\"password\" placeholder=\"Senha (se necessário)\" style=\"padding: 10px; border: 1px solid #ccc; border-radius: 5px;\"&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let tabs = {};</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let activeTab = 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let nextTabNumber = 1;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Inicializa o Quill</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var quill = new Quill('#new-item-content', {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; theme: 'snow'</div><div>&nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function renderTabs() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tabContainer = document.getElementById('tabs');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabContainer.innerHTML = '&lt;button onclick=\"addTab()\"&gt;Adicionar Aba&lt;/button&gt;';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object.keys(tabs).forEach(tabNumber =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tab = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.className = 'tab' + (tabNumber == activeTab ? ' tab-active' : '');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.setAttribute('data-tab', tabNumber);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.textContent = `Aba ${tabNumber}: ${tabs[tabNumber].title || ''}`;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.addEventListener('click', () =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.querySelector('.tab-active').classList.remove('tab-active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.classList.add('tab-active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = tabNumber;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const removeButton = document.createElement('button');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.textContent = 'Remover';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.onclick = (e) =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.stopPropagation(); // Impede a ativação da aba</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeTab(tabNumber);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.appendChild(removeButton);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabContainer.appendChild(tab);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabContainer.appendChild(document.querySelector('button'));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function removeTab(tabNumber) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; delete tabs[tabNumber];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (Object.keys(tabs).length &gt; 0) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = Math.max(...Object.keys(tabs).map(Number)); // Seleciona a aba mais alta</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = 1; // Resetar para aba 1 se não houver abas</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function updateTabInputs() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (tabs[activeTab]) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-title').value = tabs[activeTab].title || '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-description').value = tabs[activeTab].description || '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-title').value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-description').value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function updateTabTitle() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].title = document.getElementById('tab-title').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function updateTabDescription() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].description = document.getElementById('tab-description').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function renderList() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const listContainer = document.getElementById('list');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; listContainer.innerHTML = '';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (tabs[activeTab]) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items.forEach((item, index) =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const itemDiv = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.className = 'item';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const titleElement = document.createElement(item.titleFormat);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; titleElement.textContent = item.title;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.appendChild(titleElement);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const contentDiv = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentDiv.className = 'item-content';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentDiv.innerHTML = item.content; // Renderiza o conteúdo formatado</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.appendChild(contentDiv);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const removeButton = document.createElement('button');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.textContent = 'Remover';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.onclick = () =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items.splice(index, 1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.appendChild(removeButton);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; listContainer.appendChild(itemDiv);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addTab() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[nextTabNumber] = { title: '', description: '', items: [] };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = nextTabNumber;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nextTabNumber++;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addNewItem() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const newItemTitle = document.getElementById('new-item-title').value.trim();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const titleFormat = document.getElementById('item-title-format').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const newItemContent = quill.root.innerHTML; // Captura o conteúdo formatado</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (newItemTitle || newItemContent) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items.push({ title: newItemTitle, titleFormat: titleFormat, content: newItemContent });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('new-item-title').value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; quill.setContents([]); // Limpa o editor</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function save() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const json = JSON.stringify(tabs);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const blob = new Blob([json], { type: 'application/json' });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const url = URL.createObjectURL(blob);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const a = document.createElement('a');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.href = url;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.download = 'tabs.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URL.revokeObjectURL(url);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function saveEncrypted() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const json = JSON.stringify(tabs);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const password = document.getElementById('password').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const encrypted = CryptoJS.AES.encrypt(json, password).toString();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const blob = new Blob([encrypted], { type: 'text/plain' });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const url = URL.createObjectURL(blob);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const a = document.createElement('a');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.href = url;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.download = 'tabs.encrypted.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URL.revokeObjectURL(url);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function load() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const input = document.createElement('input');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.type = 'file';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.accept = '.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.onchange = e =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = e.target.files[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = event =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs = JSON.parse(event.target.result);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nextTabNumber = Math.max(...Object.keys(tabs).map(Number)) + 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = Object.keys(tabs)[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function loadEncrypted() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const input = document.createElement('input');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.type = 'file';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.accept = '.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.onchange = e =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = e.target.files[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = event =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const encrypted = event.target.result;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const password = document.getElementById('password').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const bytes = CryptoJS.AES.decrypt(encrypted, password);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const json = bytes.toString(CryptoJS.enc.Utf8);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs = JSON.parse(json);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nextTabNumber = Math.max(...Object.keys(tabs).map(Number)) + 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = Object.keys(tabs)[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (e) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Erro: Senha incorreta ou arquivo corrompido.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function printTabs() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printContent = Object.keys(tabs).map(tabNumber =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tab = tabs[tabNumber];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return `</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"page-break\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2&gt;${tab.title || ''}&lt;/h2&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;${tab.description || ''}&lt;/p&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${tab.items.map(item =&gt; `&lt;h3&gt;${item.title}&lt;/h3&gt;${item.content}`).join('')}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }).join('');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printWindow = window.open('', '', 'height=600,width=800');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.write(`</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;title&gt;Imprimir Abas&lt;/title&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; body { font-family: Arial, sans-serif; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; h2 { margin-top: 20px; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .page-break { page-break-before: always; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${printContent}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.print();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function printActiveTab() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tab = tabs[activeTab];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printContent = `</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2&gt;${tab.title || ''}&lt;/h2&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;${tab.description || ''}&lt;/p&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${tab.items.map(item =&gt; `&lt;h3&gt;${item.title}&lt;/h3&gt;${item.content}`).join('')}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printWindow = window.open('', '', 'height=600,width=800');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.write(`</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;title&gt;Imprimir Aba Ativa&lt;/title&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; body { font-family: Arial, sans-serif; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; h2 { margin-top: 20px; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${printContent}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.print();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Inicializa com uma aba</div><div>&nbsp; &nbsp; &nbsp; &nbsp; addTab();</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div>"},{"title":"Converter e Criptografar","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-BR\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;DEXTER&lt;/title&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&amp;display=swap\" rel=\"stylesheet\"&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: 'Roboto', sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f1f1f1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-width: 600px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: auto;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 8px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; h1 {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text-align: center;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; input[type=\"file\"], input[type=\"password\"] {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 10px 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #4285F4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 4px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #357ae8;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;h1&gt;Converter e Criptografar&lt;/h1&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&lt;center&gt; &lt;img src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjwfaRljoii2HSgepk8X-GZU-LOehFLR9Vxb8pJRdltyxcrgMnJq6YAgsODDYfQH9MeB3u9wbd1yGI8Uopxf9Tpt6e4XqLf3oaLHOwxmwXgnXXp7fP-dmJzv82Cm6AY_gKmgukY2BLDwaOuwmxfqzCX9Gk-xqedjiTmiKezDi2B4iBpCGFm-Pa4Y88tI1g=w200-h200\" alt=\"Descrição da imagem\"&gt; &lt;/center&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;h3&gt;Importar HTML&lt;/h3&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"file\" id=\"htmlFile\" accept=\".html\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"password\" id=\"password\" placeholder=\"Senha para criptografia\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"importAndConvertHTML()\"&gt;Converter HTML para JSON&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;h3&gt;Importar JSON&lt;/h3&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"file\" id=\"jsonFile\" accept=\".json\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"password\" id=\"jsonPassword\" placeholder=\"Senha para criptografia\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"importAndEncryptJSON()\"&gt;Criptografar JSON&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; function importAndConvertHTML() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const fileInput = document.getElementById('htmlFile');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const password = document.getElementById('password').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = fileInput.files[0];</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!file) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Por favor, selecione um arquivo HTML.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!password) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Por favor, insira uma senha para criptografia.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = function(event) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const htmlContent = event.target.result;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const jsonResult = JSON.stringify({ html: htmlContent });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const encrypted = btoa(jsonResult + password); // Criptografia simples</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; downloadFile(encrypted, 'output.json');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function importAndEncryptJSON() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const fileInput = document.getElementById('jsonFile');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const password = document.getElementById('jsonPassword').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = fileInput.files[0];</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!file) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Por favor, selecione um arquivo JSON.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!password) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Por favor, insira uma senha para criptografia.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = function(event) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const jsonContent = event.target.result;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const encrypted = btoa(jsonContent + password); // Criptografia simples</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; downloadFile(encrypted, 'encrypted_output.json');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function downloadFile(content, filename) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const blob = new Blob([content], { type: 'application/json' });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const url = URL.createObjectURL(blob);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const a = document.createElement('a');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.href = url;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.download = filename;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.body.appendChild(a);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.body.removeChild(a);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URL.revokeObjectURL(url);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div>"},{"title":"Editor de Informações Unificadas 2","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-BR\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Gerenciamento de Prontuários Unificado&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: 'Arial', sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f4f4f4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: #333;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #tabs {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: flex;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flex-wrap: wrap;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #fff;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transition: background-color 0.3s;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab-active {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #007BFF;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f0f0f0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #editor-container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #tab-info, #new-item-container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #tab-info input, #tab-info textarea, #new-item-container input {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: calc(100% - 20px);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 14px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #buttons {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #buttons button {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #007BFF;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transition: background-color 0.3s;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #buttons button:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #0056b3;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .item {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f9f9f9;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .item h3 {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0 0 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .item-content {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @media print {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: black;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .page-break {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; page-break-before: always;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .tab, #buttons {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body oncontextmenu=\"return false;\"&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"tabs\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"addTab()\"&gt;Adicionar Aba&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"editor-container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"tab-info\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"tab-title\" placeholder=\"Título da aba\" oninput=\"updateTabTitle()\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;textarea id=\"tab-description\" placeholder=\"Descrição da aba\" oninput=\"updateTabDescription()\"&gt;&lt;/textarea&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"new-item-container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"new-item-title\" placeholder=\"Título do item\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;select id=\"item-title-format\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=\"h1\"&gt;Título 1&lt;/option&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=\"h2\"&gt;Título 2&lt;/option&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=\"p\"&gt;Parágrafo&lt;/option&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/select&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"new-item-content\" style=\"height: 200px;\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"addNewItem()\"&gt;Adicionar Item&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"list\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"buttons\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"save()\"&gt;Salvar&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"saveEncrypted()\"&gt;Salvar com Criptografia&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"load()\"&gt;Carregar&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"loadEncrypted()\"&gt;Carregar com Criptografia&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"printTabs()\"&gt;Imprimir Todas as Abas&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"printActiveTab()\"&gt;Imprimir Aba Ativa&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;input type=\"password\" id=\"password\" placeholder=\"Senha (se necessário)\" style=\"padding: 10px; border: 1px solid #ccc; border-radius: 5px;\"&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let tabs = {};</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let activeTab = 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let nextTabNumber = 1;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Inicializa o Quill</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var quill = new Quill('#new-item-content', {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; theme: 'snow'</div><div>&nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function renderTabs() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tabContainer = document.getElementById('tabs');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabContainer.innerHTML = '&lt;button onclick=\"addTab()\"&gt;Adicionar Aba&lt;/button&gt;';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object.keys(tabs).forEach(tabNumber =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tab = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.className = 'tab' + (tabNumber == activeTab ? ' tab-active' : '');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.setAttribute('data-tab', tabNumber);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.textContent = `Aba ${tabNumber}: ${tabs[tabNumber].title || ''}`;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.addEventListener('click', () =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.querySelector('.tab-active').classList.remove('tab-active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.classList.add('tab-active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = tabNumber;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const removeButton = document.createElement('button');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.textContent = 'Remover';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.onclick = (e) =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.stopPropagation(); // Impede a ativação da aba</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeTab(tabNumber);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.appendChild(removeButton);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabContainer.appendChild(tab);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabContainer.appendChild(document.querySelector('button'));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function removeTab(tabNumber) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; delete tabs[tabNumber];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (Object.keys(tabs).length &gt; 0) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = Math.max(...Object.keys(tabs).map(Number)); // Seleciona a aba mais alta</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = 1; // Resetar para aba 1 se não houver abas</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function updateTabInputs() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (tabs[activeTab]) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-title').value = tabs[activeTab].title || '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-description').value = tabs[activeTab].description || '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-title').value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-description').value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function updateTabTitle() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].title = document.getElementById('tab-title').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function updateTabDescription() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].description = document.getElementById('tab-description').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function renderList() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const listContainer = document.getElementById('list');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; listContainer.innerHTML = '';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (tabs[activeTab]) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items.forEach((item, index) =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const itemDiv = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.className = 'item';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const titleElement = document.createElement(item.titleFormat);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; titleElement.textContent = item.title;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.appendChild(titleElement);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const contentDiv = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentDiv.className = 'item-content';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentDiv.innerHTML = item.content; // Renderiza o conteúdo formatado</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.appendChild(contentDiv);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const removeButton = document.createElement('button');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.textContent = 'Remover';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.onclick = () =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items.splice(index, 1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.appendChild(removeButton);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; listContainer.appendChild(itemDiv);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addTab() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[nextTabNumber] = { title: '', description: '', items: [] };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = nextTabNumber;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nextTabNumber++;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addNewItem() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const newItemTitle = document.getElementById('new-item-title').value.trim();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const titleFormat = document.getElementById('item-title-format').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const newItemContent = quill.root.innerHTML; // Captura o conteúdo formatado</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (newItemTitle || newItemContent) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items.push({ title: newItemTitle, titleFormat: titleFormat, content: newItemContent });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('new-item-title').value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; quill.setContents([]); // Limpa o editor</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function save() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const json = JSON.stringify(tabs);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const blob = new Blob([json], { type: 'application/json' });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const url = URL.createObjectURL(blob);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const a = document.createElement('a');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.href = url;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.download = 'tabs.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URL.revokeObjectURL(url);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function saveEncrypted() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const json = JSON.stringify(tabs);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const password = document.getElementById('password').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const encrypted = CryptoJS.AES.encrypt(json, password).toString();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const blob = new Blob([encrypted], { type: 'text/plain' });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const url = URL.createObjectURL(blob);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const a = document.createElement('a');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.href = url;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.download = 'tabs.encrypted.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URL.revokeObjectURL(url);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function load() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const input = document.createElement('input');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.type = 'file';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.accept = '.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.onchange = e =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = e.target.files[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = event =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs = JSON.parse(event.target.result);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nextTabNumber = Math.max(...Object.keys(tabs).map(Number)) + 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = Object.keys(tabs)[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function loadEncrypted() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const input = document.createElement('input');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.type = 'file';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.accept = '.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.onchange = e =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = e.target.files[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = event =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const encrypted = event.target.result;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const password = document.getElementById('password').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const bytes = CryptoJS.AES.decrypt(encrypted, password);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const json = bytes.toString(CryptoJS.enc.Utf8);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs = JSON.parse(json);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nextTabNumber = Math.max(...Object.keys(tabs).map(Number)) + 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = Object.keys(tabs)[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (e) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Erro: Senha incorreta ou arquivo corrompido.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function printTabs() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printContent = Object.keys(tabs).map(tabNumber =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tab = tabs[tabNumber];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return `</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"page-break\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2&gt;${tab.title || ''}&lt;/h2&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;${tab.description || ''}&lt;/p&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${tab.items.map(item =&gt; `&lt;h3&gt;${item.title}&lt;/h3&gt;${item.content}`).join('')}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }).join('');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printWindow = window.open('', '', 'height=600,width=800');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.write(`</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;title&gt;Imprimir Abas&lt;/title&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; body { font-family: Arial, sans-serif; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; h2 { margin-top: 20px; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .page-break { page-break-before: always; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${printContent}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.print();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function printActiveTab() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tab = tabs[activeTab];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printContent = `</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2&gt;${tab.title || ''}&lt;/h2&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;${tab.description || ''}&lt;/p&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${tab.items.map(item =&gt; `&lt;h3&gt;${item.title}&lt;/h3&gt;${item.content}`).join('')}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printWindow = window.open('', '', 'height=600,width=800');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.write(`</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;title&gt;Imprimir Aba Ativa&lt;/title&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; body { font-family: Arial, sans-serif; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; h2 { margin-top: 20px; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${printContent}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.print();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Inicializa com uma aba</div><div>&nbsp; &nbsp; &nbsp; &nbsp; addTab();</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div>"},{"title":"Importar Json e Visualizar","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-BR\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Visualizador de JSON em Múltiplas Abas&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: 'Arial', sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f4f4f4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-width: 800px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: auto;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 8px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tabs {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: flex;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: #ddd;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 4px 4px 0 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab.active {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-bottom: 2px solid #4285F4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; iframe {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height: 500px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 4px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; input[type=\"file\"], input[type=\"password\"] {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 10px 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #4285F4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 4px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #357ae8;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;h1&gt;Importar JSON e Visualizar em Abas&lt;/h1&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"file\" id=\"jsonFile\" accept=\".json\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"password\" id=\"encryptionPassword\" placeholder=\"Senha para decriptografia\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button id=\"importButton\"&gt;Importar JSON&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"tabs\" id=\"tabs\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"iframesContainer\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('importButton').onclick = function() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; importJSON();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function importJSON() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const fileInput = document.getElementById('jsonFile');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const password = document.getElementById('encryptionPassword').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = fileInput.files[0];</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!file) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Por favor, selecione um arquivo JSON.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = function(event) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const encryptedData = event.target.result;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Decriptografar o conteúdo</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const bytes = CryptoJS.AES.decrypt(encryptedData, password);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const jsonString = bytes.toString(CryptoJS.enc.Utf8);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const parsedData = JSON.parse(jsonString);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Limpar abas e iframes anteriores</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tabs').innerHTML = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('iframesContainer').innerHTML = '';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (const key in parsedData) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (parsedData.hasOwnProperty(key)) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addTab(parsedData[key], key);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (e) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Erro ao decriptografar o arquivo. Verifique a senha ou o formato do arquivo.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addTab(htmlContent, tabName) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tabButton = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabButton.className = 'tab';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabButton.innerText = tabName;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabButton.onclick = () =&gt; setActiveTab(tabName);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tabs').appendChild(tabButton);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const iframe = document.createElement('iframe');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframe.id = tabName;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframe.srcdoc = htmlContent;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('iframesContainer').appendChild(iframe);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Define a primeira tab como ativa</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (document.querySelectorAll('.tab').length === 1) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabButton.classList.add('active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframe.style.display = 'block';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframe.style.display = 'none';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function setActiveTab(tabName) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tabs = document.querySelectorAll('.tab');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const iframes = document.querySelectorAll('iframe');</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs.forEach(tab =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.classList.remove('active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframes.forEach(iframe =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframe.style.display = 'none';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById(tabName).style.display = 'block';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const activeTab = Array.from(tabs).find(tab =&gt; tab.innerText === tabName);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (activeTab) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab.classList.add('active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div>"},{"title":"Criar JSON criptografado","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-BR\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Gerador de JSON Criptografado&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&amp;display=swap\" rel=\"stylesheet\"&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: 'Roboto', sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f1f1f1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-width: 800px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: auto;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 8px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; input[type=\"text\"], input[type=\"password\"] {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: calc(100% - 20px);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 10px 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #4285F4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 4px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #357ae8;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .page-container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&nbsp; &nbsp; &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"&gt;&lt;/script&gt;</div><div>&lt;/head&gt;</div><div>&lt;body&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;h1&gt;Criar JSON Criptografado&lt;/h1&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"pages\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button id=\"addPageButton\"&gt;Adicionar Página&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"password\" id=\"encryptionPassword\" placeholder=\"Senha para criptografia\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button id=\"saveButton\"&gt;Salvar como JSON&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let pageCount = 0;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('addPageButton').onclick = function() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addPage();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('saveButton').onclick = function() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; saveAsJSON();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addPage() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pageCount++;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const pageContainer = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pageContainer.className = 'page-container';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pageContainer.innerHTML = `</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h3&gt;Página ${pageCount}&lt;/h3&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" placeholder=\"Título da Página ${pageCount}\" class=\"page-title-input\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;textarea placeholder=\"Conteúdo da Página ${pageCount}\" class=\"page-input\"&gt;&lt;/textarea&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('pages').appendChild(pageContainer);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function saveAsJSON() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const password = document.getElementById('encryptionPassword').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!password) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Por favor, insira uma senha para criptografia.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const titles = document.querySelectorAll('.page-title-input');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const contents = document.querySelectorAll('.page-input');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const jsonData = {};</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; titles.forEach((titleInput, index) =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const title = titleInput.value.trim();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const content = contents[index].value.trim();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (title || content) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jsonData[title || `pagina${index + 1}`] = content; // Use o título como chave, ou \"paginaX\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const jsonString = JSON.stringify(jsonData);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const encryptedData = CryptoJS.AES.encrypt(jsonString, password).toString(); // Criptografia AES</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; downloadJSON(encryptedData);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function downloadJSON(data) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const blob = new Blob([data], { type: 'application/json' });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const url = URL.createObjectURL(blob);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const a = document.createElement('a');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.href = url;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.download = 'dados.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.body.appendChild(a);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.body.removeChild(a);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div>"},{"title":"Importar Json Criptografado para HTML","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-BR\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Gerenciador de Aplicativos NKPX por JSON&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;link id=\"fontLink\" href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&amp;display=swap\" rel=\"stylesheet\" onerror=\"handleFontError()\"&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: 'Roboto', sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f1f1f1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-width: 800px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: auto;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 8px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; h1 {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text-align: center;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; input[type=\"file\"], input[type=\"password\"] {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 10px 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #4285F4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 4px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #357ae8;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tabs {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: flex;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: #ddd;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 4px 4px 0 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab.active {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-bottom: 2px solid #4285F4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; iframe {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height: 600px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 4px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #newTabButton {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: none; /* Escondido inicialmente */</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .warning {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: red;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text-align: center;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body oncontextmenu=\"return false;\"&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;h1&gt;WZZM - IMPORTAR JSON CRIPTOGRAFADO PARA HTML&lt;/h1&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"browser-warning\" class=\"warning\" style=\"display: none;\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Este aplicativo funciona melhor no Firefox. Considere usar o Firefox para uma melhor experiência.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"tabs\" id=\"tabs\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"file\" id=\"jsonFile\" accept=\".json\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"password\" id=\"password\" placeholder=\"Senha para decriptografia\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button id=\"importButton\"&gt;Importar JSON&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button id=\"newTabButton\"&gt;Adicionar Nova Aba&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"iframesContainer\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; function handleFontError() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!navigator.onLine) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Seu computador não se encontra conectado na internet');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('O servidor está ocupado');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Detecção do navegador</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const userAgent = navigator.userAgent;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const isFirefox = userAgent.includes(\"Firefox\");</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (!isFirefox) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('browser-warning').style.display = 'block';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; let passwordAttempts = 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let tabCount = 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let activeTabId = null;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('importButton').onclick = function() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; importAndRecompileJSON();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('newTabButton').onclick = function() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addNewTab();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function importAndRecompileJSON() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const fileInput = document.getElementById('jsonFile');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const password = document.getElementById('password').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = fileInput.files[0];</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!file) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Por favor, selecione um arquivo JSON.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = function(event) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const jsonContent = event.target.result;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const decryptedContent = atob(jsonContent);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const jsonData = decryptedContent.slice(0, -password.length);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const originalPassword = decryptedContent.slice(-password.length);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (originalPassword !== password) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; passwordAttempts++;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert(`Senha incorreta! Tentativas: ${passwordAttempts}`);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (passwordAttempts &gt;= 5) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Número máximo de tentativas atingido. O conteúdo será removido.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; passwordAttempts = 0; // Resetar tentativas</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const parsedData = JSON.parse(jsonData);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addTab(parsedData.html || '&lt;p&gt;Nenhum conteúdo HTML encontrado.&lt;/p&gt;');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('newTabButton').style.display = 'block'; // Mostrar o botão após a importação</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Arquivo decompilado com sucesso!');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addTab(htmlContent) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabCount++;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tabId = `tab${tabCount}`;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tabButton = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabButton.className = 'tab';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabButton.innerText = `Aba ${tabCount}`;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabButton.onclick = () =&gt; setActiveTab(tabId);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tabs').appendChild(tabButton);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const iframe = document.createElement('iframe');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframe.id = tabId;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframe.srcdoc = htmlContent;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('iframesContainer').appendChild(iframe);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Define a primeira tab como ativa</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (tabCount === 1) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabButton.classList.add('active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframe.style.display = 'block';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTabId = tabId; // Atualiza a aba ativa</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframe.style.display = 'none';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function setActiveTab(tabId) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tabs = document.querySelectorAll('.tab');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const iframes = document.querySelectorAll('iframe');</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs.forEach(tab =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.classList.remove('active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframes.forEach(iframe =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iframe.style.display = 'none';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById(tabId).style.display = 'block';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const activeTab = Array.from(tabs).find(tab =&gt; tab.innerText === `Aba ${tabId.replace('tab', '')}`);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (activeTab) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab.classList.add('active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTabId = tabId; // Atualiza a aba ativa</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addNewTab() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const newHtmlContent = '&lt;p&gt;Novo conteúdo HTML aqui.&lt;/p&gt;'; // Conteúdo inicial da nova aba</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addTab(newHtmlContent);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div>"},{"title":"Editor de Informações Unificadas Classico","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-BR\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Gerenciamento de Prontuários Unificado&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: 'Arial', sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f4f4f4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: #333;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #tabs {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: flex;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flex-wrap: wrap;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #fff;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transition: background-color 0.3s;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab-active {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #007BFF;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f0f0f0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #editor-container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #tab-info, #new-item-container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #tab-info input, #tab-info textarea, #new-item-container input, #new-item-container textarea {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: calc(100% - 20px);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 14px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #buttons {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #buttons button {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #007BFF;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transition: background-color 0.3s;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #buttons button:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #0056b3;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .item {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: flex;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; align-items: center;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .item input, .item textarea {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flex: 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; @media print {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: black;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .page-break {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; page-break-before: always;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .tab, #buttons {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body oncontextmenu=\"return false;\"&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"tabs\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"addTab()\"&gt;Adicionar Aba&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"editor-container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"tab-info\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"tab-title\" placeholder=\"Título da aba\" oninput=\"updateTabTitle()\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;textarea id=\"tab-description\" placeholder=\"Descrição da aba\" oninput=\"updateTabDescription()\"&gt;&lt;/textarea&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"new-item-container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"new-item-title\" placeholder=\"Título do item\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;textarea id=\"new-item-content\" placeholder=\"Conteúdo do item\"&gt;&lt;/textarea&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"addNewItem()\"&gt;Adicionar Item&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"list\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"buttons\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"save()\"&gt;Salvar&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"saveEncrypted()\"&gt;Salvar com Criptografia&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"load()\"&gt;Carregar&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"loadEncrypted()\"&gt;Carregar com Criptografia&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"importJson()\"&gt;Importar JSON para Visualização&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"printTabs()\"&gt;Imprimir Todas as Abas&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"printActiveTab()\"&gt;Imprimir Aba Ativa&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;input type=\"password\" id=\"password\" placeholder=\"Senha (se necessário)\" style=\"padding: 10px; border: 1px solid #ccc; border-radius: 5px;\"&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const APP_VERSION = \"Versão 0.0626\"; // Versão do aplicativo</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let tabs = {};</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let activeTab = 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let nextTabNumber = 1;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function renderTabs() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tabContainer = document.getElementById('tabs');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabContainer.innerHTML = '&lt;button onclick=\"addTab()\"&gt;Adicionar Aba&lt;/button&gt;';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object.keys(tabs).forEach(tabNumber =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tab = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.className = 'tab' + (tabNumber == activeTab ? ' tab-active' : '');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.setAttribute('data-tab', tabNumber);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.textContent = `Aba ${tabNumber}: ${tabs[tabNumber].title || ''}`;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.addEventListener('click', () =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.querySelector('.tab-active').classList.remove('tab-active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.classList.add('tab-active');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = tabNumber;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const removeButton = document.createElement('button');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.textContent = 'Remover';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.onclick = (e) =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.stopPropagation();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeTab(tabNumber);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.appendChild(removeButton);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabContainer.appendChild(tab);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabContainer.appendChild(document.querySelector('button'));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function removeTab(tabNumber) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; delete tabs[tabNumber];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (Object.keys(tabs).length &gt; 0) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = Math.max(...Object.keys(tabs).map(Number));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function updateTabInputs() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (tabs[activeTab]) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-title').value = tabs[activeTab].title || '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-description').value = tabs[activeTab].description || '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-title').value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('tab-description').value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function updateTabTitle() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].title = document.getElementById('tab-title').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function updateTabDescription() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].description = document.getElementById('tab-description').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function renderList() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const listContainer = document.getElementById('list');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; listContainer.innerHTML = '';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (tabs[activeTab]) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items.forEach((item, index) =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const itemDiv = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.className = 'item';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const titleInput = document.createElement('input');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; titleInput.value = item.title;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; titleInput.oninput = () =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items[index].title = titleInput.value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const contentTextarea = document.createElement('textarea');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentTextarea.value = item.content;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentTextarea.oninput = () =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items[index].content = contentTextarea.value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const removeButton = document.createElement('button');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.textContent = 'Remover';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; removeButton.onclick = () =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items.splice(index, 1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.appendChild(titleInput);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.appendChild(contentTextarea);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; itemDiv.appendChild(removeButton);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; listContainer.appendChild(itemDiv);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addTab() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[nextTabNumber] = { title: '', description: '', items: [] };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = nextTabNumber;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nextTabNumber++;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addNewItem() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const newItemTitle = document.getElementById('new-item-title').value.trim();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const newItemContent = document.getElementById('new-item-content').value.trim();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (newItemTitle || newItemContent) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items.push({ title: newItemTitle, content: newItemContent });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('new-item-title').value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('new-item-content').value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function save() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const json = JSON.stringify({ version: APP_VERSION, data: tabs });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const blob = new Blob([json], { type: 'application/json' });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const url = URL.createObjectURL(blob);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const a = document.createElement('a');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.href = url;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.download = 'tabs.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URL.revokeObjectURL(url);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function saveEncrypted() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const json = JSON.stringify({ version: APP_VERSION, data: tabs });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const password = document.getElementById('password').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const encrypted = CryptoJS.AES.encrypt(json, password).toString();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const blob = new Blob([encrypted], { type: 'text/plain' });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const url = URL.createObjectURL(blob);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const a = document.createElement('a');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.href = url;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.download = 'tabs.encrypted.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URL.revokeObjectURL(url);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function load() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const input = document.createElement('input');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.type = 'file';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.accept = '.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.onchange = e =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = e.target.files[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = event =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const result = JSON.parse(event.target.result);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (result.version !== APP_VERSION) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert(\"A versão sendo carregada usa uma plataforma mais moderna. O documento não pode ser aberto.\");</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs = result.data;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nextTabNumber = Math.max(...Object.keys(tabs).map(Number)) + 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = Object.keys(tabs)[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function loadEncrypted() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const input = document.createElement('input');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.type = 'file';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.accept = '.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.onchange = e =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = e.target.files[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = event =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const encrypted = event.target.result;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const password = document.getElementById('password').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const bytes = CryptoJS.AES.decrypt(encrypted, password);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const json = bytes.toString(CryptoJS.enc.Utf8);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const result = JSON.parse(json);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (result.version !== APP_VERSION) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert(\"A versão sendo carregada usa uma plataforma mais moderna. O documento não pode ser aberto.\");</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs = result.data;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nextTabNumber = Math.max(...Object.keys(tabs).map(Number)) + 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTab = Object.keys(tabs)[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateTabInputs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (e) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Erro 1:138: Senha incorreta ou arquivo corrompido.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function printTabs() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printContent = Object.keys(tabs).map(tabNumber =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tab = tabs[tabNumber];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return `</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"page-break\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2&gt;${tab.title || ''}&lt;/h2&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;${tab.description || ''}&lt;/p&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${tab.items.map(item =&gt; `&lt;h3&gt;${item.title}&lt;/h3&gt;&lt;p&gt;${item.content}&lt;/p&gt;`).join('')}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }).join('');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printWindow = window.open('', '', 'height=600,width=800');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.write(`</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;title&gt;Imprimir Abas&lt;/title&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; body { font-family: Arial, sans-serif; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; h2 { margin-top: 20px; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .page-break { page-break-before: always; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${printContent}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.print();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function printActiveTab() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const tab = tabs[activeTab];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printContent = `</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h2&gt;${tab.title || ''}&lt;/h2&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;${tab.description || ''}&lt;/p&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${tab.items.map(item =&gt; `&lt;h3&gt;${item.title}&lt;/h3&gt;&lt;p&gt;${item.content}&lt;/p&gt;`).join('')}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printWindow = window.open('', '', 'height=600,width=800');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.write(`</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;title&gt;Imprimir Aba Ativa&lt;/title&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; body { font-family: Arial, sans-serif; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; h2 { margin-top: 20px; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/head&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${printContent}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/body&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/html&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.print();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Inicializa com uma aba</div><div>&nbsp; &nbsp; &nbsp; &nbsp; addTab();</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div>"},{"title":"Calculadora","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-br\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Calculadora com Múltiplas Abas&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: 'Arial', sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: flex;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flex-direction: column;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; align-items: center;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f0f0f5;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: #333;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab-container {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: flex;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-bottom: 2px solid #007BFF;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-bottom: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #fff;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px 5px 0 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transition: background-color 0.3s;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .tab.active {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #007BFF;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-bottom: 2px solid transparent;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .calculator {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0 4px 15px rgba(0,0,0,0.1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 300px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; input[type=\"text\"] {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 24px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ccc;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 16px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #007BFF;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transition: background-color 0.3s;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #0056b3;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #history {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-height: 150px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; overflow-y: auto;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #history h3 {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #history ul {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; list-style-type: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #history li {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 5px 0;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-bottom: 1px solid #ddd;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Verifica se a página está sendo exibida em um iframe</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (window.top !== window.self) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Se não estiver, faça nada (ou redirecione, ou mostre uma mensagem)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Se não estiver em um iframe, redireciona ou exibe uma mensagem</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.body.innerHTML = '&lt;h1&gt;Esta página deve ser carregada em um iframe.&lt;/h1&gt;';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/head&gt;</div><div>&lt;body&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"tab-container\" id=\"tabContainer\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"tab active\" onclick=\"switchTab(0)\"&gt;Aba 1&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"calculator\" id=\"calculatorContainer\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"display\" readonly&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('7')\"&gt;7&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('8')\"&gt;8&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('9')\"&gt;9&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('/')\"&gt;/&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('4')\"&gt;4&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('5')\"&gt;5&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('6')\"&gt;6&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('*')\"&gt;*&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('1')\"&gt;1&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('2')\"&gt;2&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('3')\"&gt;3&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('-')\"&gt;-&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('0')\"&gt;0&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('.')\"&gt;.&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"calculate()\"&gt;=&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"appendToDisplay('+')\"&gt;+&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"clearDisplay()\"&gt;C&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"saveState()\"&gt;Salvar Estado&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"importState()\"&gt;Importar Estado&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"addTab()\"&gt;Adicionar Aba&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"removeTab()\"&gt;Remover Aba&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"history\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h3&gt;Histórico:&lt;/h3&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;ul id=\"historyList\"&gt;&lt;/ul&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;input type=\"file\" id=\"fileInput\" style=\"display:none;\" onchange=\"handleFileUpload(event)\"&gt;</div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const tabContainer = document.getElementById('tabContainer');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const fileInput = document.getElementById('fileInput');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let tabs = [{ display: '', history: [] }];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let activeTabIndex = 0;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function appendToDisplay(value) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const display = document.getElementById('display');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display.value += value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function clearDisplay() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const display = document.getElementById('display');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display.value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function calculate() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const display = document.getElementById('display');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const result = eval(display.value);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getCurrentTab().history.push({ expression: display.value, result });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display.value = result;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateHistory();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (e) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display.value = 'Erro';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function updateHistory() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const historyList = document.getElementById('historyList');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; historyList.innerHTML = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getCurrentTab().history.forEach(item =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const li = document.createElement('li');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; li.textContent = `${item.expression} = ${item.result}`;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; historyList.appendChild(li);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function saveState() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const state = tabs.map(tab =&gt; ({</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: tab.display,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; history: tab.history</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const blob = new Blob([JSON.stringify(state, null, 2)], { type: 'application/json' });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const url = URL.createObjectURL(blob);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const a = document.createElement('a');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.href = url;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.download = 'estado.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; URL.revokeObjectURL(url);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function importState() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fileInput.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function handleFileUpload(event) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = event.target.files[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (file &amp;&amp; file.type === 'application/json') {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = function(e) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const data = JSON.parse(e.target.result);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (Array.isArray(data)) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs = data.map(tab =&gt; ({</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: tab.display,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; history: tab.history</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }));</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; switchTab(activeTabIndex); // Ensure the correct tab is active</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('O arquivo JSON não contém um estado válido.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (err) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Erro ao processar o estado');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Por favor, selecione um arquivo JSON com um estado válido.');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addTab() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const newIndex = tabs.length;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs.push({ display: '', history: [] });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; switchTab(newIndex); // Switch to the newly added tab</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function removeTab() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (tabs.length &gt; 1) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs.splice(activeTabIndex, 1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTabIndex = Math.max(0, activeTabIndex - 1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderTabs();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; switchTab(activeTabIndex);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function switchTab(index) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (index &gt;= 0 &amp;&amp; index &lt; tabs.length) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activeTabIndex = index;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const currentTab = tabs[activeTabIndex];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.querySelectorAll('.tab').forEach((tab, i) =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.classList.toggle('active', i === activeTabIndex);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateCalculatorState(currentTab);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function renderTabs() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabContainer.innerHTML = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs.forEach((tab, index) =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const div = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; div.className = 'tab' + (index === activeTabIndex ? ' active' : '');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; div.textContent = `Aba ${index + 1}`;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; div.onclick = () =&gt; switchTab(index);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabContainer.appendChild(div);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function updateCalculatorState(tab) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const display = document.getElementById('display');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display.value = tab.display;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const historyList = document.getElementById('historyList');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; historyList.innerHTML = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tab.history.forEach(item =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const li = document.createElement('li');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; li.textContent = `${item.expression} = ${item.result}`;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; historyList.appendChild(li);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function getCurrentTab() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tabs[activeTabIndex];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div>"},{"title":"Leitor de QR Code","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-br\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Gerador de QR Code&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.qrcode/1.0/jquery.qrcode.min.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: Arial, sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: flex;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flex-direction: column;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; align-items: center;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; #qrcode {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-top: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body&gt;</div><div>&nbsp; &nbsp; &lt;h1&gt;Gerador de QR Code&lt;/h1&gt;</div><div>&nbsp; &nbsp; &lt;input type=\"text\" id=\"text-input\" placeholder=\"Digite seu texto aqui\" /&gt;</div><div>&nbsp; &nbsp; &lt;button id=\"generate\"&gt;Gerar QR Code&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"qrcode\"&gt;&lt;/div&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; $(document).ready(function() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $('#generate').click(function() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const text = $('#text-input').val();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $('#qrcode').empty(); // Limpa o QR Code anterior</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $('#qrcode').qrcode(text); // Gera o QR Code</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div>"},{"title":"Editor em Células Classico","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-BR\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Editor de Células de Informação&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: Arial, sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f4f4f4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .cell {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ddd;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 15px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0 2px 5px rgba(0,0,0,0.1);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .toolbar {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: Arial, sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-size: 14px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #0078d4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: white;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: none;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 5px 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border-radius: 4px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cursor: pointer;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-right: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; button:hover {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #005a9e;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .title-input {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 100%;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 5px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin-bottom: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .content {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; border: 1px solid #ddd;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height: 200px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; padding: 10px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; overflow-y: auto;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #fff;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body&gt;</div><div>&nbsp; &nbsp; &lt;h1&gt;Editor de Células de Informação&lt;/h1&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"toolbar\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"addCell()\"&gt;Adicionar Célula&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"saveCells()\"&gt;Salvar em JSON&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"file\" id=\"fileInput\" accept=\".json\" onchange=\"importJSON()\" style=\"display:none;\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"document.getElementById('fileInput').click()\"&gt;Importar JSON&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"printCells()\"&gt;Imprimir Todas as Células&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"cellContainer\"&gt;&lt;/div&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addCell() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const cellDiv = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cellDiv.className = 'cell';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const titleInput = document.createElement('input');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; titleInput.className = 'title-input';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; titleInput.placeholder = 'Título da Célula';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const toolbar = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; toolbar.className = 'toolbar';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Opções de formatação</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const formatButtons = [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Negrito', command: 'bold' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Itálico', command: 'italic' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Sublinhado', command: 'underline' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Lista Ordenada', command: 'insertOrderedList' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Lista Não Ordenada', command: 'insertUnorderedList' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Alinhar à Esquerda', command: 'justifyLeft' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Alinhar ao Centro', command: 'justifyCenter' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Alinhar à Direita', command: 'justifyRight' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ];</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; formatButtons.forEach(button =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const btn = document.createElement('button');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; btn.innerText = button.text;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; btn.onclick = () =&gt; document.execCommand(button.command);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; toolbar.appendChild(btn);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const contentDiv = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentDiv.className = 'content';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentDiv.contentEditable = true;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cellDiv.appendChild(titleInput);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cellDiv.appendChild(toolbar);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cellDiv.appendChild(contentDiv);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('cellContainer').appendChild(cellDiv);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function saveCells() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const cells = Array.from(document.querySelectorAll('.cell')).map(cell =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const title = cell.querySelector('.title-input').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const content = cell.querySelector('.content').innerHTML;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return { title, content };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const json = JSON.stringify(cells);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const blob = new Blob([json], { type: 'application/json' });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const url = URL.createObjectURL(blob);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const a = document.createElement('a');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.href = url;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.download = 'cels.json';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.body.appendChild(a);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a.click();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.body.removeChild(a);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function importJSON() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const fileInput = document.getElementById('fileInput');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const file = fileInput.files[0];</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const reader = new FileReader();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.onload = function(event) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const json = JSON.parse(event.target.result);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; json.forEach(item =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const cellDiv = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cellDiv.className = 'cell';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const titleInput = document.createElement('input');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; titleInput.className = 'title-input';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; titleInput.value = item.title;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const toolbar = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; toolbar.className = 'toolbar';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const formatButtons = [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Negrito', command: 'bold' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Itálico', command: 'italic' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Sublinhado', command: 'underline' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Lista Ordenada', command: 'insertOrderedList' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Lista Não Ordenada', command: 'insertUnorderedList' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Alinhar à Esquerda', command: 'justifyLeft' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Alinhar ao Centro', command: 'justifyCenter' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; { text: 'Alinhar à Direita', command: 'justifyRight' },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ];</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; formatButtons.forEach(button =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const btn = document.createElement('button');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; btn.innerText = button.text;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; btn.onclick = () =&gt; document.execCommand(button.command);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; toolbar.appendChild(btn);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const contentDiv = document.createElement('div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentDiv.className = 'content';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentDiv.contentEditable = true;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contentDiv.innerHTML = item.content;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cellDiv.appendChild(titleInput);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cellDiv.appendChild(toolbar);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cellDiv.appendChild(contentDiv);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('cellContainer').appendChild(cellDiv);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reader.readAsText(file);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function printCells() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const allContent = Array.from(document.querySelectorAll('.cell')).map(cell =&gt; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const title = cell.querySelector('.title-input').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const content = cell.querySelector('.content').innerHTML;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return `&lt;h2&gt;${title}&lt;/h2&gt;&lt;div&gt;${content}&lt;/div&gt;&lt;hr&gt;`;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }).join('');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const printWindow = window.open('', '', 'height=600,width=800');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.write('&lt;html&gt;&lt;head&gt;&lt;title&gt;Imprimir Células&lt;/title&gt;&lt;/head&gt;&lt;body&gt;');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.write(allContent);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.write('&lt;/body&gt;&lt;/html&gt;');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.document.close();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printWindow.print();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div>"},{"title":"Gráfico de Pizza","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-BR\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Gerador de Gráfico de Pizza&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;script src=\"https://cdn.jsdelivr.net/npm/chart.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; canvas {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-width: 400px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-height: 400px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body&gt;</div><div><br></div><div>&lt;h1&gt;Gerador de Gráfico de Pizza&lt;/h1&gt;</div><div>&lt;label for=\"labels\"&gt;Rótulos (separados por vírgula):&lt;/label&gt;</div><div>&lt;input type=\"text\" id=\"labels\" value=\"Categoria A, Categoria B, Categoria C, Categoria D\"&gt;&lt;br&gt;</div><div>&lt;label for=\"values\"&gt;Valores (separados por vírgula):&lt;/label&gt;</div><div>&lt;input type=\"text\" id=\"values\" value=\"10, 20, 30, 40\"&gt;&lt;br&gt;</div><div>&lt;button onclick=\"gerarGrafico()\"&gt;Gerar Gráfico&lt;/button&gt;</div><div><br></div><div>&lt;canvas id=\"meuGrafico\"&gt;&lt;/canvas&gt;</div><div><br></div><div>&lt;script&gt;</div><div>&nbsp; &nbsp; let meuGrafico; // Declara a variável fora da função</div><div><br></div><div>&nbsp; &nbsp; function gerarGrafico() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const ctx = document.getElementById('meuGrafico').getContext('2d');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const labels = document.getElementById('labels').value.split(',');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const values = document.getElementById('values').value.split(',').map(Number);</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Se o gráfico já existir, destrói antes de criar um novo</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (meuGrafico) meuGrafico.destroy();&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Cria um novo gráfico</div><div>&nbsp; &nbsp; &nbsp; &nbsp; meuGrafico = new Chart(ctx, {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; type: 'pie',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; labels: labels,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; datasets: [{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; label: 'Distribuição',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data: values,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; backgroundColor: [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(255, 99, 132, 0.6)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(54, 162, 235, 0.6)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(255, 206, 86, 0.6)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(75, 192, 192, 0.6)'</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; borderColor: [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(255, 99, 132, 1)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(54, 162, 235, 1)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(255, 206, 86, 1)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(75, 192, 192, 1)'</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; borderWidth: 1</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; options: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; responsive: true,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plugins: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; legend: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'top',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; title: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: true,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text: 'Gráfico de Pizza Personalizado'</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; }</div><div>&lt;/script&gt;</div><div><br></div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div>"},{"title":"Gráfico de Pizza com salvamento em diretório","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-BR\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Gerador de Gráfico de Pizza&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;script src=\"https://cdn.jsdelivr.net/npm/chart.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; canvas {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-width: 400px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-height: 400px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body&gt;</div><div><br></div><div>&lt;h1&gt;Gerador de Gráfico de Pizza&lt;/h1&gt;</div><div>&lt;label for=\"labels\"&gt;Rótulos (separados por vírgula):&lt;/label&gt;</div><div>&lt;input type=\"text\" id=\"labels\" value=\"Categoria A, Categoria B, Categoria C, Categoria D\"&gt;&lt;br&gt;</div><div>&lt;label for=\"values\"&gt;Valores (separados por vírgula):&lt;/label&gt;</div><div>&lt;input type=\"text\" id=\"values\" value=\"10, 20, 30, 40\"&gt;&lt;br&gt;</div><div>&lt;button onclick=\"gerarGrafico()\"&gt;Gerar Gráfico&lt;/button&gt;</div><div>&lt;button onclick=\"salvarGrafico()\"&gt;Salvar Gráfico&lt;/button&gt;</div><div><br></div><div>&lt;canvas id=\"meuGrafico\"&gt;&lt;/canvas&gt;</div><div><br></div><div>&lt;script&gt;</div><div>&nbsp; &nbsp; let meuGrafico; // Declara a variável fora da função</div><div><br></div><div>&nbsp; &nbsp; function gerarGrafico() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const ctx = document.getElementById('meuGrafico').getContext('2d');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const labels = document.getElementById('labels').value.split(',');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const values = document.getElementById('values').value.split(',').map(Number);</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Se o gráfico já existir, destrói antes de criar um novo</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (meuGrafico) meuGrafico.destroy();&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Cria um novo gráfico</div><div>&nbsp; &nbsp; &nbsp; &nbsp; meuGrafico = new Chart(ctx, {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; type: 'pie',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; labels: labels,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; datasets: [{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; label: 'Distribuição',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data: values,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; backgroundColor: [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(255, 99, 132, 0.6)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(54, 162, 235, 0.6)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(255, 206, 86, 0.6)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(75, 192, 192, 0.6)'</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; borderColor: [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(255, 99, 132, 1)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(54, 162, 235, 1)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(255, 206, 86, 1)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(75, 192, 192, 1)'</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; borderWidth: 1</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; options: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; responsive: true,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plugins: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; legend: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'top',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; title: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: true,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text: 'Gráfico de Pizza Personalizado'</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; function salvarGrafico() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; const link = document.createElement('a');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; link.href = document.getElementById('meuGrafico').toDataURL('image/png');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; link.download = 'grafico_de_pizza.png';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; link.click();</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; alert('Gráfico salvo como \"grafico_de_pizza.png\" no seu diretório de downloads.');</div><div>&nbsp; &nbsp; }</div><div>&lt;/script&gt;</div><div><br></div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div><div><br></div>"},{"title":"Novo sistema de modelo de Sistema de Gestão da Informação","content":"<div>&lt;!DOCTYPE html&gt;</div><div>&lt;html lang=\"pt-BR\"&gt;</div><div>&lt;head&gt;</div><div>&nbsp; &nbsp; &lt;meta charset=\"UTF-8\"&gt;</div><div>&nbsp; &nbsp; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;</div><div>&nbsp; &nbsp; &lt;title&gt;Gerenciamento de Prontuários Unificado&lt;/title&gt;</div><div>&nbsp; &nbsp; &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;</div><div>&nbsp; &nbsp; &lt;script src=\"https://cdn.jsdelivr.net/npm/chart.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; body {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: 'Arial', sans-serif;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 20px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #f4f4f4;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; color: #333;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; /* (restante do CSS) */</div><div>&nbsp; &nbsp; &nbsp; &nbsp; canvas {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-width: 400px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max-height: 400px;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&lt;/head&gt;</div><div>&lt;body oncontextmenu=\"return false;\"&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"tabs\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"addTab()\"&gt;Adicionar Aba&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"editor-container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"tab-info\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"tab-title\" placeholder=\"Título da aba\" oninput=\"updateTabTitle()\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;textarea id=\"tab-description\" placeholder=\"Descrição da aba\" oninput=\"updateTabDescription()\"&gt;&lt;/textarea&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"new-item-container\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"new-item-title\" placeholder=\"Título do item\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;select id=\"item-title-format\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=\"h1\"&gt;Título 1&lt;/option&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=\"h2\"&gt;Título 2&lt;/option&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=\"p\"&gt;Parágrafo&lt;/option&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/select&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"new-item-content\" style=\"height: 200px;\"&gt;&lt;/div&gt;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h3&gt;Gerar Gráfico de Pizza&lt;/h3&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;label for=\"labels\"&gt;Rótulos (separados por vírgula):&lt;/label&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"labels\" value=\"Categoria A, Categoria B, Categoria C, Categoria D\"&gt;&lt;br&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;label for=\"values\"&gt;Valores (separados por vírgula):&lt;/label&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"text\" id=\"values\" value=\"10, 20, 30, 40\"&gt;&lt;br&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"gerarGrafico()\"&gt;Gerar Gráfico&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;canvas id=\"meuGrafico\"&gt;&lt;/canvas&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"salvarGrafico()\"&gt;Salvar Gráfico&lt;/button&gt;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"addNewItem()\"&gt;Adicionar Item&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div id=\"list\"&gt;&lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;div id=\"buttons\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"save()\"&gt;Salvar&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"saveEncrypted()\"&gt;Salvar com Criptografia&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"load()\"&gt;Carregar&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"loadEncrypted()\"&gt;Carregar com Criptografia&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"printTabs()\"&gt;Imprimir Todas as Abas&lt;/button&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;button onclick=\"printActiveTab()\"&gt;Imprimir Aba Ativa&lt;/button&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;input type=\"password\" id=\"password\" placeholder=\"Senha (se necessário)\" style=\"padding: 10px; border: 1px solid #ccc; border-radius: 5px;\"&gt;</div><div><br></div><div>&nbsp; &nbsp; &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\"&gt;&lt;/script&gt;</div><div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let tabs = {};</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let activeTab = 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let nextTabNumber = 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let meuGrafico; // Variável para o gráfico</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Inicializa o Quill</div><div>&nbsp; &nbsp; &nbsp; &nbsp; var quill = new Quill('#new-item-content', {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; theme: 'snow'</div><div>&nbsp; &nbsp; &nbsp; &nbsp; });</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function gerarGrafico() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const ctx = document.getElementById('meuGrafico').getContext('2d');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const labels = document.getElementById('labels').value.split(',');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const values = document.getElementById('values').value.split(',').map(Number);</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Se o gráfico já existir, destrói antes de criar um novo</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (meuGrafico) meuGrafico.destroy();</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Cria um novo gráfico</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; meuGrafico = new Chart(ctx, {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; type: 'pie',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; labels: labels,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; datasets: [{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; label: 'Distribuição',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data: values,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; backgroundColor: [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(255, 99, 132, 0.6)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(54, 162, 235, 0.6)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(255, 206, 86, 0.6)',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'rgba(75, 192, 192, 0.6)'</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; options: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; responsive: true,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plugins: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; legend: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; position: 'top',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; title: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; display: true,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text: 'Gráfico de Pizza Personalizado'</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; function salvarGrafico() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const image = document.getElementById('meuGrafico').toDataURL('image/png');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items.push({&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; title: 'Gráfico de Pizza',&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; titleFormat: 'h3',&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; content: `&lt;img src=\"${image}\" alt=\"Gráfico de Pizza\"&gt;`&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert('Gráfico salvo!');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; // (restante do código JavaScript)</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; function addNewItem() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const newItemTitle = document.getElementById('new-item-title').value.trim();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const titleFormat = document.getElementById('item-title-format').value;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const newItemContent = quill.root.innerHTML; // Captura o conteúdo formatado</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (newItemTitle || newItemContent) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tabs[activeTab].items.push({ title: newItemTitle, titleFormat: titleFormat, content: newItemContent });</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('new-item-title').value = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; quill.setContents([]); // Limpa o editor</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; renderList();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; // (restante do código JavaScript)</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; // Inicializa com uma aba</div><div>&nbsp; &nbsp; &nbsp; &nbsp; addTab();</div><div>&nbsp; &nbsp; &lt;/script&gt;</div><div>&lt;/body&gt;</div><div>&lt;/html&gt;</div><div><br></div>"}]